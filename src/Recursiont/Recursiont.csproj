<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>net6.0;netstandard2.1;netstandard2.0</TargetFrameworks>
    <VersionPrefix>1.0.0</VersionPrefix>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <LangVersion>latest</LangVersion>
    <IsTrimmable>true</IsTrimmable>
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <EnablePackageValidation>true</EnablePackageValidation>
    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <DebugType>portable</DebugType>
    <DefineConstants>$(DefineConstants);RECURSIONT</DefineConstants>

    <Title>Recursion't</Title>
    <Product>$(Title)</Product>
    <Authors>Theodore Tsirpanis</Authors>
    <Description>A library that allows writing infinitely deep recursive functions in C# without blowing up the stack.</Description>
    <PackageProjectUrl>https://github.com/teo-tsirpanis/Recursiont</PackageProjectUrl>
    <PackageTags>recursion</PackageTags>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
  </PropertyGroup>
  <ItemGroup>
    <InternalsVisibleTo Include="Recursiont.Tests" />
    <PackageReference Include="DotNet.ReproducibleBuilds" Version="1.1.1" PrivateAssets="all" />
    <PackageReference Include="Nullable" Version="1.3.1" PrivateAssets="all" />
    <!-- .NET Standard 2.0 does not have inbox AsyncMethodBuilderAttribute. -->
    <PackageReference Include="System.Threading.Tasks.Extensions" Version="4.5.4" Condition="'$(TargetFramework)' == 'netstandard2.0'" />
    <ProjectReference Include="..\Recursiont.Internal.SourceGenerators\Recursiont.Internal.SourceGenerators.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
    <Using Include="Recursiont.Infrastructure" />
  </ItemGroup>
</Project>
